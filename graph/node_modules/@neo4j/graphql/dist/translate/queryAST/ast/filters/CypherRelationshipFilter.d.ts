import Cypher from "@neo4j/cypher-builder";
import type { AttributeAdapter } from "../../../../schema-model/attribute/model-adapters/AttributeAdapter";
import type { QueryASTContext } from "../QueryASTContext";
import type { QueryASTNode } from "../QueryASTNode";
import type { CustomCypherSelection } from "../selection/CustomCypherSelection";
import type { RelationshipWhereOperator } from "./Filter";
import { Filter } from "./Filter";
export declare class CypherRelationshipFilter extends Filter {
    private returnVariable;
    private attribute;
    private selection;
    private operator;
    private targetNodeFilters;
    private isNot;
    constructor({ selection, attribute, operator, isNot, returnVariable, }: {
        selection: CustomCypherSelection;
        attribute: AttributeAdapter;
        operator: RelationshipWhereOperator;
        isNot: boolean;
        returnVariable: Cypher.Node;
    });
    getChildren(): QueryASTNode[];
    addTargetNodeFilter(...filter: Filter[]): void;
    print(): string;
    getSubqueries(context: QueryASTContext): Cypher.Clause[];
    getPredicate(queryASTContext: QueryASTContext): Cypher.Predicate | undefined;
    private createRelationshipOperation;
    private wrapInNotIfNeeded;
}
//# sourceMappingURL=CypherRelationshipFilter.d.ts.map